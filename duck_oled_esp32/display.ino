void displayGearFet() {
  display.setCursor(0, 0);
  display.setTextSize(4);
  if (digitalRead(GEAR_4))
    display.print("4");
  else if (digitalRead(GEAR_3))
    display.print("3");
  else if (digitalRead(GEAR_2))
    display.print("2");
  else if (digitalRead(GEAR_1))
    display.print("1");
  else if (digitalRead(GEAR_N))
    display.print("N");
  else
    display.print("#");
}

void diplayTemps() {
  display.setCursor(27, 16);
  display.print("         ");
  display.setTextSize(2);
  display.setCursor(27, 16);
  display.print("M");
  display.print(motorTemp, 0);
  display.setCursor(82, 16);
  display.print("A");
  display.print(envTemp, 0);
}

void displayClock() {
  display.setCursor(48, 0);
  if (curTime.hour() < 10)  display.print("0");
  display.print(curTime.hour(), DEC);
  if (dots)  display.print(':');
  else  display.print(' ');
  if (curTime.minute() < 10)  display.print("0");
  display.print(curTime.minute(), DEC);
}

#ifdef SHOW_LOGOS
const unsigned char kawasaki [] PROGMEM = {
  0xfc, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x3f,
  0xfe, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x3f,
  0xfe, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x3f,
  0xfe, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x3f,
  0xfe, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00,
  0xff, 0xfe, 0x00, 0xff, 0x1e, 0x07, 0x83, 0xe3, 0xfc, 0x03, 0xf0, 0x07, 0xf8, 0x7e, 0x1f, 0x80,
  0xff, 0xfc, 0x03, 0xff, 0xff, 0x0f, 0xc7, 0xef, 0xff, 0x0f, 0xfc, 0x1f, 0xfe, 0x7e, 0x3f, 0xbf,
  0xff, 0xf8, 0x07, 0xff, 0xff, 0x8f, 0xc7, 0xff, 0xff, 0x9f, 0xfe, 0x3f, 0xff, 0x7e, 0x7f, 0x3f,
  0xff, 0xf8, 0x0f, 0xff, 0xff, 0x9f, 0xc7, 0xff, 0xff, 0xbf, 0xff, 0x7f, 0xff, 0x7e, 0xfe, 0x3f,
  0xff, 0xfc, 0x0f, 0xc7, 0xff, 0x9f, 0xcf, 0xff, 0x1f, 0xbf, 0x1f, 0x7e, 0x3f, 0x7f, 0xfc, 0x3f,
  0xff, 0xfe, 0x00, 0x07, 0xef, 0x9f, 0xef, 0xc0, 0x1f, 0xbf, 0xc0, 0x00, 0x3f, 0x7f, 0xf8, 0x3f,
  0xff, 0xfe, 0x01, 0xff, 0xef, 0x9f, 0xef, 0x87, 0xff, 0xbf, 0xfc, 0x0f, 0xff, 0x7f, 0xf8, 0x3f,
  0xff, 0xff, 0x07, 0xff, 0xe7, 0xff, 0xef, 0x9f, 0xff, 0x9f, 0xff, 0x3f, 0xff, 0x7f, 0xf8, 0x3f,
  0xfe, 0x7f, 0x8f, 0xff, 0xe7, 0xfd, 0xff, 0xbf, 0xff, 0x8f, 0xff, 0x7f, 0xff, 0x7f, 0xfc, 0x3f,
  0xfe, 0x7f, 0x9f, 0xe7, 0xe7, 0xfd, 0xff, 0x7f, 0x9f, 0x81, 0xff, 0xff, 0x3f, 0x7f, 0xfe, 0x3f,
  0xfe, 0x3f, 0xdf, 0x87, 0xe7, 0xfd, 0xff, 0x7e, 0x1f, 0xfe, 0x3f, 0xfe, 0x3f, 0x7e, 0x7e, 0x3f,
  0xfe, 0x3f, 0xdf, 0xcf, 0xe3, 0xfc, 0xff, 0x7f, 0x3f, 0xff, 0x3f, 0xfe, 0x7f, 0x7e, 0x7f, 0x3f,
  0xfe, 0x1f, 0xff, 0xff, 0xe3, 0xf8, 0xfe, 0x7f, 0xff, 0xbf, 0xff, 0x7f, 0xff, 0x7e, 0x3f, 0xbf,
  0xfe, 0x0f, 0xff, 0xff, 0xf3, 0xf8, 0xfe, 0x3f, 0xff, 0x9f, 0xfe, 0x7f, 0xff, 0xfe, 0x3f, 0xbf,
  0xfe, 0x0f, 0xf7, 0xf3, 0xf1, 0xf8, 0x7e, 0x1f, 0xcf, 0xcf, 0xfc, 0x1f, 0x9f, 0xfe, 0x1f, 0xff
};

const unsigned char kazer [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x01, 0xff, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe3, 0x00, 0x00, 0x3f, 0xff, 0xfe,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0xf0, 0x03, 0xff, 0x81, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x1c, 0x1f, 0x83, 0xff, 0xff,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xdd, 0x81, 0x90, 0x00, 0x0e, 0x38, 0xff, 0xff, 0xff,
  0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x18, 0x08, 0x00, 0xc0, 0x00, 0x1c, 0x4f, 0xff, 0xff, 0xfb,
  0x00, 0x03, 0x00, 0xff, 0x61, 0x80, 0x08, 0x00, 0x00, 0x60, 0x00, 0x7c, 0x9f, 0xde, 0xff, 0xf7,
  0x00, 0x06, 0x01, 0xf0, 0x23, 0x00, 0x08, 0x0f, 0x00, 0xe0, 0xff, 0xf0, 0x3f, 0xbe, 0xff, 0xef,
  0x00, 0x1e, 0x03, 0x00, 0x34, 0x00, 0x30, 0x3e, 0x00, 0xc1, 0x7f, 0xc0, 0x7f, 0x78, 0xff, 0xdf,
  0x00, 0x3c, 0x04, 0x00, 0x70, 0x18, 0x70, 0x70, 0x03, 0xc0, 0x08, 0x06, 0xfe, 0xe3, 0xff, 0x7e,
  0x00, 0xf8, 0x00, 0x00, 0xe0, 0x70, 0xf3, 0xe0, 0x3f, 0x80, 0x1c, 0x0d, 0xfd, 0xcf, 0xfd, 0xf8,
  0x00, 0xe0, 0x00, 0x41, 0x80, 0xc1, 0xff, 0x81, 0xfc, 0x06, 0x7c, 0x79, 0xff, 0x9f, 0xef, 0xe0,
  0x01, 0xc0, 0x0f, 0xcf, 0x00, 0x23, 0xfe, 0x0f, 0xfe, 0x1f, 0xff, 0xe3, 0xf6, 0x7f, 0xff, 0x80,
  0x01, 0x80, 0x3f, 0xbc, 0x00, 0x67, 0xf0, 0x3f, 0xfe, 0x3f, 0xff, 0x1f, 0xe7, 0xff, 0xfe, 0x00,
  0x03, 0x80, 0xff, 0xf8, 0x01, 0xc7, 0xc1, 0xff, 0x06, 0x3f, 0x80, 0x1f, 0xff, 0xc7, 0xf8, 0x00,
  0x07, 0x00, 0x7f, 0xf0, 0x31, 0x8f, 0x83, 0xfc, 0x04, 0x10, 0x00, 0x3f, 0xff, 0xff, 0xe0, 0x00,
  0x06, 0x60, 0x1f, 0xc0, 0x78, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xff, 0xff, 0xfc, 0xf8, 0x00,
  0x0c, 0x86, 0x07, 0x80, 0x78, 0x3c, 0x00, 0x1c, 0x18, 0x03, 0xff, 0xff, 0x5f, 0xff, 0x9f, 0x80,
  0x1b, 0x0f, 0x80, 0x00, 0x78, 0x3c, 0x00, 0x78, 0xf8, 0x0f, 0xff, 0xfe, 0xfb, 0xff, 0xe7, 0xc0,
  0x35, 0x8f, 0xf0, 0x00, 0xf8, 0x1f, 0x0f, 0xff, 0xfe, 0xff, 0xcd, 0xfd, 0xff, 0x7f, 0xff, 0xf8,
  0x60, 0x1f, 0xf8, 0x03, 0xf8, 0x1f, 0x9f, 0xff, 0xff, 0xfe, 0x1b, 0xfb, 0xff, 0xcf, 0xfc, 0x7c,
  0xfd, 0xbf, 0xfe, 0x03, 0xfe, 0xff, 0xff, 0xff, 0x07, 0xec, 0x37, 0xf7, 0xff, 0xfb, 0xff, 0xfe,
  0x3f, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x80, 0x6f, 0xef, 0xff, 0xff, 0xff, 0xfe,
  0x0f, 0xf8, 0x07, 0xff, 0xc3, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0xdf, 0xdf, 0xfe, 0x1f, 0xff, 0xfe,
  0x03, 0xf0, 0x03, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbf, 0xbf, 0xf0, 0x00, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x3d, 0x7f, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00
};

void displayBootSeq() {
  display.drawBitmap(0, 5, kawasaki, 128, 20, WHITE);
  display.display();
  delay(1500);

  display.clearDisplay();
  display.display();
  delay(100);

  display.clearDisplay();
  display.drawBitmap(0, 1, kazer, 128, 30, WHITE);
  display.display();
  delay(1500);

  display.clearDisplay();
  display.display();
  delay(100);
}
#endif
